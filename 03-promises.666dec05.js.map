{"mappings":"gfAAAA,EAAA,S,WAGA,IAAMC,EAAOC,SAASC,cAAc,QAEhCC,EAAQC,OAAOH,SAASC,cAAc,oBAAoBG,OAC1DC,EAAOF,OAAOH,SAASC,cAAc,mBAAmBG,OACxDE,EAASH,OAAOH,SAASC,cAAc,qBAAqBG,OAShE,SAASG,EAAcC,EAAUC,GAE/BC,YAAW,WACK,IAAIC,SAAQ,SAACC,EAASC,GACZC,KAAKC,SAAW,GAGpCH,EAAQ,WAERC,EAAO,U,IAKLG,MAAK,SAAAC,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAALG,MACxBC,QAAQC,IAAI,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAE3DK,OAAM,SAAAP,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAALG,MAClBC,QAAQC,IAAI,sBAAqCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,MAEtDV,EAAQD,E,CAKb,SAASiB,IACP,IAAK,IAAIjB,EAAW,EAAGA,GAAYF,EAAQE,IACzCD,EAAcC,EAAUH,E,CAlC5BN,EAAK2B,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACNlB,WAAWe,EAAsBvB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { promise, reject, resolve } from 'when';\n\nconst form = document.querySelector('form');\n\nlet delay = Number(document.querySelector('[name = \"delay\"]').value);\nlet step = Number(document.querySelector('[name = \"step\"]').value);\nlet amount = Number(document.querySelector('[name = \"amount\"]').value);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  setTimeout(generatePromiseChain, delay);\n};\n\nfunction createPromise(position, delay) {\n\n  setTimeout(() => {\n    let promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve('Success');\n      } else {\n        reject('Failure');\n      };\n\n    });\n  \n  promise.then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }) \n  }, delay * position)\n\n};\n \n\nfunction generatePromiseChain() {\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, step);\n  }\n};\n  \n\n\n\n  \n \n\n  \n\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","Number","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","setTimeout","Promise","resolve1","reject1","Math","random","then","param","_$position","_$delay","delay","console","log","concat","catch","$ce04d3a99e08e73b$var$generatePromiseChain","addEventListener","event","preventDefault"],"version":3,"file":"03-promises.666dec05.js.map"}